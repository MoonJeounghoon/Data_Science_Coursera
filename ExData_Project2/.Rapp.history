summary(test)
logchi2=log10(test$chi2)
contour(test$rp,test$pi,logchi2,nlevels=10)
test=read.table('/Users/wolk/Desktop/Paramfit/pouet.txt', header=T)
summary(pouet)
summary(test)
test=read.table('/Users/wolk/Desktop/Paramfit/output.txt', header=T)
logchi2=log10(test$chi2)
summary(test)
test=read.table('/Users/wolk/Desktop/Paramfit/output.txt', header=T)
logchi2=log10(test$chi2)
summary(test)
x=c(min(test$rp):max(test$rp))
x
y=c(min(test$pi):max(test$pi))
y
contour(x,y,logchi2,nlevels=10)
install.packages('ash')
library(ash)
x=c(min(test$rp):max(test$rp),0.1)
x
x=(1:2,0.1)
x=seq(1,2,0.1)
x
length(test$rp)
length(test$pi)
A=matrix(test$chi2,length(rp),length(pi))
A=matrix(test$chi2,length(test$rp),length(test$pi))
A
summary(test)
xaxis=seq(1.1,11,0.1)
length(xaxis)
A=matrix(test$chi2,100,100)
yaxis=seq(1.1,11,0.1)
contour(xaxis,yaxis,A,nlevels=5)
B=log10(A)
contour(xaxis,yaxis,B,nlevels=20)
contour(xaxis,yaxis,B[B<100],nlevels=20)
where(test$chi2<100)
test$chi2<100
test$chi2[test$chi2<100]
good=test$chi2[test$chi2<100]
summary(good)
goodrp=test$rp[test$chi2<100]
goodpi=test$pi[test$chi2<100]
goodrp
G=matrix(good,100,100)
length(goodrp)
length(pi)
length(goodpi)
seq(1.8,11,0.1)
lenght(seq(1.8,11,0.1))
length(seq(1.8,11,0.1))
93*93
sqrt(656)
contour(xaxis,yaxis,B,nlevels=20)
R=A[A<100]
R
dim(R)
dim(A)
length(R)
xaxis=seq(6.5,6.9,0.1)
xaxis
yaxis=seq(6.5,6.9,0.1)
yaxis=seq(1.9,2.3,0.1)
contour(xaxis,yaxis,B,nlevels=20)
yaxis=seq(1.1,11,0.1)
xaxis=seq(1.1,11,0.1)
contour(xaxis,yaxis,B,nlevels=20)
contour(xaxis,yaxis,B, zlim=c(0,2),nlevels=20)
xaxis=seq(1.1,4,0.1)
contour(xaxis,yaxis,B, zlim=c(0,2),nlevels=20)
xaxis=seq(1.1,11,0.1)
contour(xaxis,yaxis,B, zlim=c(0,2),nlevels=20)
contour(xaxis,yaxis,B, xlim=c(0,4),zlim=c(0,2),nlevels=20)
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),zlim=c(0,2),nlevels=20)
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=20)
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,12),zlim=c(0,2),nlevels=20)
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=20)
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10)
postscript("/Users/wolk/Desktop/contour.ps")
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10)
dev.off()
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10,ylab='pi',xlab='rp')
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10,ylab='rp',xlab='pi')
postscript("/Users/wolk/Desktop/contour.ps")
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10,ylab='rp',xlab='pi')
dev.off()
test=read.table('/Users/wolk/Desktop/Paramfit/output.txt', header=T)#
xaxis=seq(1.1,11,0.1)#
yaxis=seq(1.1,11,0.1)#
A=matrix(test$chi2,100,100)#
B=log10(A)#
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10,ylab='rp',xlab='pi')
test=read.table('/Users/wolk/Desktop/Paramfit/output.txt', header=T)#
xaxis=seq(1.1,11,0.1)#
yaxis=seq(1.1,11,0.1)#
A=matrix(test$chi2,100,100)#
B=log10(A)#
contour(xaxis,yaxis,B, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=6,ylab='rp',xlab='pi')
read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
test=read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
summary(test)
?gamma
gamma(2)
gamma(3)
gamma(4)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=6,r.o=2), trace=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=2,r.o=6), trace=T)
test=read.table("/Users/wolk/Desktop/Paramfit/files050719.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=6,r.o=2), trace=T)
test=read.table("/Users/wolk/Desktop/Paramfit/files050721.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=6,r.o=2), trace=T)
summary(test)
test=read.table("/Users/wolk/Desktop/Paramfit/files050721.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=6,r.o=2), trace=T)
test=read.table("/Users/wolk/Desktop/Paramfit/files050722.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=6,r.o=2), trace=T)
test=read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=1,r.o=1), trace=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=0.5,r.o=0.5), trace=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=2,r.o=2), trace=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T)
?nls
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(test$err)^2)
summary(test)
test=read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(test$err)^2)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=1/((test$err)^2))
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=1./((test$err)^2))
test=read.table("/Users/wolk/Desktop/Paramfit/files050719.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=1./((test$err)^2))
test=read.table("/Users/wolk/Desktop/Paramfit/files050721.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=1./((test$err)^2))
test=read.table("/Users/wolk/Desktop/Paramfit/files050722.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=1./((test$err)^2))
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
test=read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
?nls
test.fit$1
summary(test.fit)
test=read.table("/Users/wolk/Desktop/test", header=T)
pouet=read.table("/Users/wolk/Desktop/test", header=T)
summary(pouet)
xaxis=seq(1.1,11,0.1)#
yaxis=seq(1.1,11,0.1)
A=matrix(pouet$chi2,100,100)
contour(pouet$r0,pouet$gamma, pouet$chi2, xlim=c(1.1,3.5),ylim=c(1.1,11.1),zlim=c(0,2),nlevels=10,ylab='rp',xlab='pi')
test=read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
summary(test)
test=read.table("/Users/wolk/Desktop/Paramfit/files050720.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
test=read.table("/Users/wolk/Desktop/Paramfit/files0522.6.txt", header=T)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
summary(test)
test=read.table("/Users/wolk/Desktop/Paramfit/files0522.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
test=read.table("/Users/wolk/Desktop/Paramfit/files0520.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
? gamma
gamma(0.5)*gamma(0.5*(1.835-1))/gamma(1.835*0.5)
4.79^1.835
test=read.table("/Users/wolk/Desktop/Paramfit/files0520.6cut.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
test=read.table("/Users/wolk/Desktop/Paramfit/files0521.6.txt", header=T)
summary(test)
test.fit = nls(test$wp ~ (gamma(0.5)*gamma(0.5*(Ga-1)))/(gamma(0.5*Ga))*(test$rp)^(1-Ga)*(r.o)^(Ga), data=test, start=list(Ga=5,r.o=10), trace=T,weight=(1./((test$err)^2)))
demo()
getwd()
dlr()
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
install.packages("ggplot2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
allyear <- unique(NEI$year)
n <- length(allyear)
TotalEmissions <- array(1:n)
for (i in 1:n){TotalEmissions[i] <- sum(NEI$Emissions[NEI$year == allyear[i]])}
barplot(TotalEmissions, space=7, main = "Total PM2.5 emission in US", names.arg =allyear, xlab="Year", ylab="Total emission", axis.lty=1, ylim=c(0, 8e+06))
abline(a=TotalEmissions[1], b=0)
abline(a=TotalEmissions[2], b=0)
abline(a=TotalEmissions[3], b=0)
abline(a=TotalEmissions[4], b=0)
par(bg="white")
dev.copy(png, file="plot1.png")
dev.off()
par(bg="white")
barplot(TotalEmissions, space=7, main = "Total PM2.5 emission in US", names.arg =allyear, xlab="Year", ylab="Total emission", axis.lty=1, ylim=c(0, 8e+06))
abline(a=TotalEmissions[1], b=0)
abline(a=TotalEmissions[2], b=0)
abline(a=TotalEmissions[3], b=0)
abline(a=TotalEmissions[4], b=0)
dev.copy(png, file="plot1.png")
dev.off()
TotalEmissionsBaltimore <- array(1:n)
for (i in 1:n){TotalEmissionsBaltimore[i] <- sum(NEI$Emissions[(NEI$year == allyear[i]) & (NEI$fips == 24510) ])}
par(bg="white")
barplot(TotalEmissionsBaltimore, space=7, main = "Total PM2.5 emission in Baltimore", names.arg =allyear, xlab="Year", ylab="Total emission" axis.lty=1, ylim=c(0, 4000))
barplot(TotalEmissionsBaltimore, space=7, main = "Total PM2.5 emission in Baltimore", names.arg =allyear, xlab="Year", ylab="Total emission", axis.lty=1, ylim=c(0, 4000))
dev.copy(png, file="plot2.png")
dev.off()
barplot(TotalEmissionsBaltimore, space=7, main = "Total PM2.5 emission in Baltimore", names.arg =allyear, xlab="Year", ylab="Total emission", axis.lty=1, ylim=c(0, 4000))
abline(a=TotalEmissionsBaltimore[1], b=0)
abline(a=TotalEmissionsBaltimore[2], b=0)
abline(a=TotalEmissionsBaltimore[3], b=0)
abline(a=TotalEmissionsBaltimore[4], b=0)
dev.copy(png, file="plot2.png")
dev.off()
par(bg="white")
barplot(TotalEmissionsBaltimore, space=7, main = "Total PM2.5 emission in Baltimore", names.arg =allyear, xlab="Year", ylab="Total emission", axis.lty=1, ylim=c(0, 4000))
abline(a=TotalEmissionsBaltimore[1], b=0)
abline(a=TotalEmissionsBaltimore[2], b=0)
abline(a=TotalEmissionsBaltimore[3], b=0)
abline(a=TotalEmissionsBaltimore[4], b=0)
dev.copy(png, file="plot2.png")
dev.off()
test <- aggregate(NEI$Emissions[NEI$fips ==24510], by=list(NEI$year[NEI$fips ==24510], NEI$type[NEI$fips ==24510]), FUN=sum)type <- test$Group.2
par(bg="white")
qplot(test$Group.1, test$x, facets = type ~ ., geom=c("point", "smooth"), method="lm", xlab="Year", ylab="Total emissions", se = FALSE)
install.packages("ggplot2")
library(ggplot2)
qplot(test$Group.1, test$x, facets = type ~ ., geom=c("point", "smooth"), method="lm", xlab="Year", ylab="Total emissions", se = FALSE)
qplot(test$Group.1, test$x, facets = type ~ ., geom=c("point", "smooth"), method="lm", xlab="Year", ylab="Total emission in Baltimore", se = FALSE)
dev.copy(png, file="plot3.png")
dev.off()
scc_coal <- SCC[grep("[cC]oal", SCC$Short.Name), ]
nei_coal <- NEI[NEI$SCC %in% scc_coal$SCC, ]
par(bg="white")
total <- aggregate(nei_coal$Emissions, by=list(nei_coal$year), FUN=sum)
barplot(total$x, space=7, main = "Emissions (select by Short.Name == [cC]oal)", names.arg =total$Group.1, xlab="Year", ylab="Emissions from coal combustion", axis.lty=1, ylim=c(0, 6e+05))
dev.copy(png, file="plot4.png")
dev.off()
scc_motor <- SCC[grep("[Vv]ehicle", SCC$SCC.Level.Two), ]nei_motor <- NEI[NEI$fips == "24510" & NEI$SCC %in% scc_motor$SCC, ]total <- aggregate(nei_motor$Emissions, by=list(nei_motor$year), FUN=sum)
par(bg="white")
barplot(total$x, space=7, main = "Emissions (select by SCC.Level.Two == [Vv]ehicle)", names.arg =total$Group.1, xlab="Year", ylab="Emissions from vehicle source",axis.lty=1, ylim=c(0, 500))
barplot(total$x, space=7, main = "Emissions (select by SCC.Level.Two == [Vv]ehicle)", names.arg =total$Group.1, xlab="Year", ylab="Emissions from vehicle sources",axis.lty=1, ylim=c(0, 500))
dev.copy(png, file="plot5.png")
dev.off()
par(bg="white")
barplot(total$x, space=7, main = "Emissions in Baltimore (select by SCC.Level.Two == [Vv]ehicle)", names.arg =total$Group.1, xlab="Year", ylab="Emissions from vehicle sources",axis.lty=1, ylim=c(0, 500))
dev.copy(png, file="plot5.png")
dev.off()
scc_motor <- SCC[grep("[Vv]ehicle", SCC$SCC.Level.Two), ]nei_motorB <- NEI[NEI$fips == "24510" & NEI$SCC %in% scc_motor$SCC, ]nei_motorLA <- NEI[NEI$fips == "06037" & NEI$SCC %in% scc_motor$SCC, ]totalB <- aggregate(nei_motorB$Emissions, by=list(nei_motorB$year), FUN=sum)totalLA <- aggregate(nei_motorLA$Emissions, by=list(nei_motorLA$year), FUN=sum)par(mfrow=c(1,2), bg="white")
barplot(totalB$x, space=7, main = "Baltimore City", names.arg =totalB$Group.1, xlab="Year", ylab="Emissions from vehicle sources", axis.lty=1, ylim=c(0, 500))
barplot(totalLA$x, space=7, main = "Los Angeles", names.arg =totalLA$Group.1, xlab="Year", ylab="Emissions from vehicle sources", axis.lty=1, ylim=c(0, 7500))
barplot(totalB$x, space=5, main = "Baltimore City", names.arg =totalB$Group.1, xlab="Year", ylab="Emissions from vehicle sources", axis.lty=1, ylim=c(0, 500))
par(mfrow=c(1,2), bg="white")
barplot(totalB$x, space=5, main = "Baltimore City", names.arg =totalB$Group.1, xlab="Year", ylab="Emissions from vehicle sources", axis.lty=1, ylim=c(0, 500))
barplot(totalLA$x, space=5, main = "Los Angeles", names.arg =totalLA$Group.1, xlab="Year", ylab="Emissions from vehicle sources", axis.lty=1, ylim=c(0, 7500))
dev.copy(png, file="plot6.png")
dev.off()
